openapi: 3.0.3
info:
  title: Ecommerce Savannah API
  version: 1.0.0
  description: Ecommerce Savannah API
paths:
  /api/cart-items/:
    get:
      operationId: api_cart_items_list
      tags:
      - api
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CartItem'
          description: ''
    post:
      operationId: api_cart_items_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CartItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CartItem'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartItem'
          description: ''
  /api/cart-items/{id}/:
    get:
      operationId: api_cart_items_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartItem'
          description: ''
    put:
      operationId: api_cart_items_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartItemUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CartItemUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CartItemUpdate'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartItemUpdate'
          description: ''
    patch:
      operationId: api_cart_items_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCartItemUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCartItemUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCartItemUpdate'
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartItemUpdate'
          description: ''
    delete:
      operationId: api_cart_items_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '204':
          description: No response body
  /api/confirm-email/{key}/:
    get:
      operationId: api_confirm_email_retrieve
      parameters:
      - in: path
        name: key
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/github/:
    post:
      operationId: api_github_create
      description: GitHub login
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SocialLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SocialLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SocialLogin'
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialLogin'
          description: ''
  /api/github-callback/:
    get:
      operationId: api_github_callback_retrieve
      description: Github callback
      tags:
      - api
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/google/:
    post:
      operationId: api_google_create
      description: Google login
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SocialLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SocialLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SocialLogin'
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialLogin'
          description: ''
  /api/google-callback/:
    get:
      operationId: api_google_callback_retrieve
      description: Google callback
      tags:
      - api
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/orders/:
    get:
      operationId: api_orders_list
      tags:
      - api
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
          description: ''
    post:
      operationId: api_orders_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateOrder'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrder'
          description: ''
  /api/orders/{orders_pk}/items/:
    get:
      operationId: api_orders_items_list
      parameters:
      - in: path
        name: orders_pk
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderItem'
          description: ''
    post:
      operationId: api_orders_items_create
      parameters:
      - in: path
        name: orders_pk
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderItem'
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
          description: ''
  /api/orders/{orders_pk}/items/{id}/:
    get:
      operationId: api_orders_items_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order item.
        required: true
      - in: path
        name: orders_pk
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
          description: ''
    put:
      operationId: api_orders_items_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order item.
        required: true
      - in: path
        name: orders_pk
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderItem'
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
          description: ''
    patch:
      operationId: api_orders_items_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order item.
        required: true
      - in: path
        name: orders_pk
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrderItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrderItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrderItem'
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
          description: ''
    delete:
      operationId: api_orders_items_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order item.
        required: true
      - in: path
        name: orders_pk
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '204':
          description: No response body
  /api/orders/{id}/:
    get:
      operationId: api_orders_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    put:
      operationId: api_orders_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateOrder'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateOrder'
          description: ''
    patch:
      operationId: api_orders_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateOrder'
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateOrder'
          description: ''
    delete:
      operationId: api_orders_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '204':
          description: No response body
  /api/products/:
    get:
      operationId: api_products_list
      tags:
      - api
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
          description: ''
    post:
      operationId: api_products_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/products/{id}/:
    get:
      operationId: api_products_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - api
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    put:
      operationId: api_products_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: api_products_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: api_products_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - api
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '204':
          description: No response body
  /api/token/refresh/:
    post:
      operationId: api_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/token/verify/:
    post:
      operationId: api_token_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
  /api/verify-email/:
    post:
      operationId: api_verify_email_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
        required: true
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
components:
  schemas:
    CartItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          allOf:
          - $ref: '#/components/schemas/Product'
          readOnly: true
        product_id:
          type: integer
          minimum: 1
          writeOnly: true
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
      required:
      - id
      - product
      - product_id
    CartItemUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          allOf:
          - $ref: '#/components/schemas/Product'
          readOnly: true
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        action:
          type: string
          writeOnly: true
      required:
      - action
      - id
      - product
    CreateOrder:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        address:
          type: string
          maxLength: 100
        phone_number:
          type: string
          maxLength: 128
      required:
      - address
      - id
      - phone_number
    Order:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        address:
          type: string
          maxLength: 100
        phone_number:
          type: string
          maxLength: 128
        total_amount:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        product:
          type: array
          items:
            $ref: '#/components/schemas/Product'
          readOnly: true
      required:
      - address
      - id
      - phone_number
      - product
      - status
      - total_amount
    OrderItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          allOf:
          - $ref: '#/components/schemas/Product'
          readOnly: true
      required:
      - id
      - product
    PatchedCartItemUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          allOf:
          - $ref: '#/components/schemas/Product'
          readOnly: true
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        action:
          type: string
          writeOnly: true
    PatchedOrderItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          allOf:
          - $ref: '#/components/schemas/Product'
          readOnly: true
    PatchedProduct:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          minLength: 20
        price:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        stock:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        image:
          type: string
          format: uri
        updated_at:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedUpdateOrder:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusEnum'
    Product:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          minLength: 20
        price:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        stock:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        image:
          type: string
          format: uri
        updated_at:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - description
      - id
      - image
      - name
      - price
      - stock
      - updated_at
    RestAuthDetail:
      type: object
      properties:
        detail:
          type: string
          readOnly: true
      required:
      - detail
    SocialLogin:
      type: object
      properties:
        access_token:
          type: string
        code:
          type: string
        id_token:
          type: string
    StatusEnum:
      enum:
      - Acknowledged
      - Cancelled
      - Shipped
      - Delivered
      type: string
      description: |-
        * `Acknowledged` - Acknowledged
        * `Cancelled` - Cancelled
        * `Shipped` - Shipped
        * `Delivered` - Delivered
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
    UpdateOrder:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusEnum'
      required:
      - id
      - status
    VerifyEmail:
      type: object
      properties:
        key:
          type: string
          writeOnly: true
      required:
      - key
  securitySchemes:
    jwtCookieAuth:
      type: apiKey
      in: cookie
      name: jwt-auth
    jwtHeaderAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
